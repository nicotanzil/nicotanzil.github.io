{"version":3,"sources":["store/theme-context.jsx","components/BackgroundParticles.jsx","components/introduction/Introduction.jsx","components/about-me/AboutMe.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","toggleTheme","getTheme","ThemeContextProvider","props","useState","theme","setTheme","Provider","value","color","background","backgroundParticles","backgroundParticlesOpacity","backgroundParticlesColor","children","BackgroundParticles","themeContext","useContext","id","init","main","loaded","container","options","particles","number","density","enable","value_area","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","Introduction","className","AboutMe","App","ctx","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c869067.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\n\nconst ThemeContext = createContext({\n\ttoggleTheme: () => {},\n\tgetTheme: () => {},\n});\n\nexport const ThemeContextProvider = (props) => {\n\tconst [theme, setTheme] = useState(\"light\");\n\n\tconst toggleTheme = () => {\n\t\tsetTheme(theme === \"light\" ? \"dark\" : \"light\");\n\t};\n\n\tconst getTheme = () => {\n\t\tif (theme === \"light\") {\n\t\t\treturn {\n\t\t\t\tcolor: \"#ffffff\",\n\t\t\t\tbackground: \"#ffffff\",\n\t\t\t\tbackgroundParticles: \"#ffffff\",\n\t\t\t\tbackgroundParticlesOpacity: 0.5,\n\t\t\t\tbackgroundParticlesColor: \"#ffffff\",\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcolor: \"#000000\",\n\t\t\t\tbackground: \"#000000\",\n\t\t\t\tbackgroundParticles: \"#000000\",\n\t\t\t\tbackgroundParticlesOpacity: 0.5,\n\t\t\t\tbackgroundParticlesColor: \"#000000\",\n\t\t\t};\n\t\t}\n\t};\n\n\treturn (\n\t\t<ThemeContext.Provider\n\t\t\tvalue={{\n\t\t\t\ttheme: theme,\n\t\t\t\ttoggleTheme,\n\t\t\t\tgetTheme,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</ThemeContext.Provider>\n\t);\n};\n\nexport default ThemeContext;\n","// react component particle\nimport { useContext } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { useState, useEffect } from \"react/cjs/react.development\";\nimport ThemeContext from \"../store/theme-context\";\n\nimport \"../styles/BackgroundParticles.css\";\n\nconst BackgroundParticles = (props) => {\n\tconst themeContext = useContext(ThemeContext);\n\n\tconst particlesInit = (main) => {\n\t\t// you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n\t};\n\n\tconst particlesLoaded = (container) => {};\n\n\treturn (\n\t\t<Particles\n\t\t\tid=\"tsparticles\"\n\t\t\tinit={particlesInit}\n\t\t\tloaded={particlesLoaded}\n\t\t\toptions={{\n\t\t\t\tparticles: {\n\t\t\t\t\tnumber: {\n\t\t\t\t\t\tvalue: 160,\n\t\t\t\t\t\tdensity: {\n\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\tvalue_area: 800,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tvalue: `${themeContext.theme === \"dark\" ? \"#ffffff\" : \"#000000\"}`,\n\t\t\t\t\t},\n\t\t\t\t\tshape: {\n\t\t\t\t\t\ttype: \"circle\",\n\t\t\t\t\t\tstroke: {\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpolygon: {\n\t\t\t\t\t\t\tnb_sides: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\timage: {\n\t\t\t\t\t\t\tsrc: \"img/github.svg\",\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\theight: 100,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\topacity: {\n\t\t\t\t\t\tvalue: 1,\n\t\t\t\t\t\trandom: true,\n\t\t\t\t\t\tanim: {\n\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\tspeed: 1,\n\t\t\t\t\t\t\topacity_min: 0,\n\t\t\t\t\t\t\tsync: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tsize: {\n\t\t\t\t\t\tvalue: 3,\n\t\t\t\t\t\trandom: true,\n\t\t\t\t\t\tanim: {\n\t\t\t\t\t\t\tenable: false,\n\t\t\t\t\t\t\tspeed: 4,\n\t\t\t\t\t\t\tsize_min: 0.3,\n\t\t\t\t\t\t\tsync: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tline_linked: {\n\t\t\t\t\t\tenable: false,\n\t\t\t\t\t\tdistance: 150,\n\t\t\t\t\t\tcolor: \"#ffffff\",\n\t\t\t\t\t\topacity: 0.4,\n\t\t\t\t\t\twidth: 1,\n\t\t\t\t\t},\n\t\t\t\t\tmove: {\n\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\tspeed: 1,\n\t\t\t\t\t\tdirection: \"none\",\n\t\t\t\t\t\trandom: true,\n\t\t\t\t\t\tstraight: false,\n\t\t\t\t\t\tout_mode: \"out\",\n\t\t\t\t\t\tbounce: false,\n\t\t\t\t\t\tattract: {\n\t\t\t\t\t\t\tenable: false,\n\t\t\t\t\t\t\trotateX: 600,\n\t\t\t\t\t\t\trotateY: 600,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tinteractivity: {\n\t\t\t\t\tdetect_on: \"canvas\",\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonhover: {\n\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\tmode: \"bubble\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonclick: {\n\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\tmode: \"bubble\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresize: true,\n\t\t\t\t\t},\n\t\t\t\t\tmodes: {\n\t\t\t\t\t\tgrab: {\n\t\t\t\t\t\t\tdistance: 400,\n\t\t\t\t\t\t\tline_linked: {\n\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbubble: {\n\t\t\t\t\t\t\tdistance: 250,\n\t\t\t\t\t\t\tsize: 0,\n\t\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\tspeed: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\trepulse: {\n\t\t\t\t\t\t\tdistance: 400,\n\t\t\t\t\t\t\tduration: 0.4,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpush: {\n\t\t\t\t\t\t\tparticles_nb: 4,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tremove: {\n\t\t\t\t\t\t\tparticles_nb: 2,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tretina_detect: true,\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default BackgroundParticles;\n","import { useContext } from \"react\";\nimport ThemeContext from \"../../store/theme-context\";\nimport \"./Introduction.css\";\n\nconst Introduction = (props) => {\n\tconst themeContext = useContext(ThemeContext);\n\n\treturn (\n\t\t<div className=\"introduction\">\n\t\t\t<h1>Introduction</h1>\n\t\t</div>\n\t);\n};\n\nexport default Introduction;\n","import { useContext } from \"react\";\nimport ThemeContext from \"../../store/theme-context\";\nimport \"./AboutMe.css\";\n\nconst AboutMe = (props) => {\n\tconst themeContext = useContext(ThemeContext);\n\n\treturn (\n\t\t<div className=\"about-me\">\n\t\t\t<h1>About Me</h1>\n\t\t</div>\n\t);\n};\n\nexport default AboutMe;\n","import \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport BackgroundParticles from \"./components/BackgroundParticles\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport React, { useContext } from \"react\";\nimport ThemeContext from \"./store/theme-context\";\nimport Introduction from \"./components/introduction/Introduction\";\nimport AboutMe from \"./components/about-me/AboutMe\";\n\nfunction App() {\n\tconst ctx = useContext(ThemeContext);\n\n\t// initial useEffect\n\tuseEffect(() => {}, []);\n\n\treturn (\n\t\t<div className=\"App\" id=\"app-root\" data-theme={ctx.theme}>\n\t\t\t{/* <button onClick={ctx.toggleTheme} className=\"toggle-theme-button\">\n\t\t\t\t\tToggle Theme\n\t\t\t\t</button> */}\n\t\t\t<Introduction />\n\t\t\t<AboutMe />\n\t\t\t<BackgroundParticles className=\"background-particles\" />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeContextProvider } from \"./store/theme-context\";\n\nReactDOM.render(\n\t<ThemeContextProvider>\n\t\t<App />\n\t</ThemeContextProvider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}